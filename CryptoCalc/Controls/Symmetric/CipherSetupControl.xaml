<UserControl x:Class="CryptoCalc.CipherSetupControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CryptoCalc"
             xmlns:core="clr-namespace:CryptoCalc.Core;assembly=CryptoCalc.Core"
             mc:Ignorable="d" 
             d:DesignWidth="500">

    <Grid Background="{StaticResource WhiteBrush}"
          d:DataContext="{x:Static core:SymmetricDesignModel.Instance}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <!--ComboBoxes-->
        <StackPanel Margin="5">
            
            <!--Data Format ComboBox-->
            <TextBlock Text="Data Format:" />
            <ComboBox ItemsSource="{Binding DataSetup.DataFormatOptions}"
                      SelectedIndex="{Binding DataSetup.DataFormatSelected, Converter={local:DataHashFormatEnumToInt}}"
                      local:SelectionChangedProperty.Value="{Binding DataSetup.DataFormatSelectionChangedCommand}"
                      local:ComboBoxElementsMaxWidthProperty.Value="True"
                      HorizontalAlignment="Right"/>
            
            <!--Algorithims ComboBox-->
            <TextBlock Text="Algorithim"
                       Margin="0 8 0 0"/>
            <ComboBox ItemsSource="{Binding Algorithims}"
                      SelectedIndex ="{Binding SelectedAlgorithim}"
                      local:ComboBoxElementsMaxWidthProperty.Value="True"
                      local:SelectionChangedProperty.Value="{Binding ChangedAlgorithimCommand}" 
                      HorizontalAlignment="Right"/>
            
            <!--Key size comboBox-->
            <TextBlock Text="Key Size (bits)" 
                       Margin="0 8 0 0"/>
            <ComboBox ItemsSource="{Binding KeySizes}"
                      SelectedIndex="{Binding KeySizeIndex}"
                      local:ComboBoxElementsMaxWidthProperty.Value="True"
                      HorizontalAlignment="Right"/>
        </StackPanel>
        
        <!--Cipher algorithim option list-->
        <StackPanel Grid.Column="1"
                    Margin="5">
            <!--Data to be hashed-->
            <TextBlock Text="Data:" />
            <Grid >
                <Grid.ColumnDefinitions>
                    <!--Data text box-->
                    <ColumnDefinition Width="*"/>
                    <!--File dialog window pop up button-->
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <!--Data text box-->
                <TextBox Text="{Binding DataSetup.Data, UpdateSourceTrigger=PropertyChanged}"
                         Background="{Binding DataSetup.DataIsCorrectlyFormatted, Converter={local:BoolToBackground}}"
                         local:DragDropProperty.Value="True"
                         VerticalContentAlignment="Center"/>
                
                <!--File broswer dialog pop up button-->
                <Button Command="{Binding DataSetup.OpenFolderDialogCommand}"
                        Visibility="{Binding DataSetup.DataFormatSelected, Converter={local:DataFormatsToVisibility}, ConverterParameter=File}"
                        Grid.Column="1"
                        Margin="5,0,0,0"
                        Padding="5 2"
                        Content="..." />
            </Grid>
            
            <StackPanel>
                <!--Secret Key text box-->
                <TextBlock Text="Secret key" 
                           Margin="0 8 0 0"/>
                <TextBox Text="{Binding SecretKey, UpdateSourceTrigger=PropertyChanged}" 
                         Background="{Binding SecretKeyAcceptable, Converter={local:BoolToBackground}}"/>
                
                <!--Initial value text box-->
                <TextBlock Margin="0 8 0 0">
                    <Run Text="Initial value" />
                    <Run Text="(" /><Run Text="{Binding IvSize}" />
                    <Run Text=" bits)" />
                </TextBlock>
                    <TextBox Text="{Binding IV, UpdateSourceTrigger=PropertyChanged}" 
                            IsEnabled="{Binding HasIv}"
                            Background="{Binding IvAcceptable, Converter={local:BoolToBackground}}"/>
            </StackPanel>
            
            <!--Random key generation button-->
            <Button Content="Generate random key" 
                    Command="{Binding GenerateKeyCommand}"
                    HorizontalAlignment="Right"
                    Margin="0 8"/>
        </StackPanel>
        
    </Grid>
    
</UserControl>
